version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: asistencia-postgres
    environment:
      POSTGRES_DB: asistencia_db
      POSTGRES_USER: asistencia_user
      POSTGRES_PASSWORD: asistencia_pass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - asistencia-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U asistencia_user -d asistencia_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Spring Boot Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: asistencia-backend
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=asistencia_db
      - DB_USERNAME=asistencia_user
      - DB_PASSWORD=asistencia_pass
      - JWT_SECRET=mySecretKey123456789012345678901234567890
      - CORS_ORIGINS=http://localhost:3000,http://frontend:3000
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - asistencia-network
    volumes:
      - ./backend/logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Vue.js Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: asistencia-frontend
    ports:
      - "3000:3000"
    environment:
      - VITE_API_BASE_URL=http://localhost:8080/api
    depends_on:
      - backend
    networks:
      - asistencia-network
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public

volumes:
  postgres_data:
    driver: local

networks:
  asistencia-network:
    driver: bridge